{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2019-09-16T05:23:08.399Z",
    "end": "2019-09-16T05:23:25.956Z",
    "duration": 17557,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ab369caa-b4e7-4773-ac44-8910637923ab",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "40e7d6ec-f181-4f3b-9ffe-d636a82e2daa",
          "title": "My first pupeteer test",
          "fullFile": "C:\\puppet\\tests\\example.js",
          "file": "\\tests\\example.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "My first pupeteer test \"before all\" hook",
              "timedOut": false,
              "duration": 1087,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "browser = await puppeteer.launch({\n  headless: config.headless,\n  slowMo: config.slowMo,\n  devTools: config.isDevTools,\n  timeout: config.timeout\n})\npage = await browser.newPage()\nawait page.setDefaultTimeout(config.waitingTimeout)\nawait page.setViewport({\n  width: config.viewportWidth,\n  height: config.viewportHeight\n})",
              "err": {},
              "uuid": "ea043d39-5647-4f45-89d5-841de5adff78",
              "parentUUID": "40e7d6ec-f181-4f3b-9ffe-d636a82e2daa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "My first pupeteer test \"after all\" hook",
              "timedOut": false,
              "duration": 2195,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await browser.close()",
              "err": {},
              "uuid": "8aa02098-268d-453d-bf3e-79304bd93b4c",
              "parentUUID": "40e7d6ec-f181-4f3b-9ffe-d636a82e2daa",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "my first test step",
              "fullTitle": "My first pupeteer test my first test step",
              "timedOut": false,
              "duration": 3780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loadUrl(page, config.baseUrl)\n//await page.goto(config.baseUrl)\n//await page.waitForSelector('#nav-search')\nawait shouldExist(page, '#nav-search')\nawait waitForText(page, 'body', 'WRITE A POST')\nconst url = await page.url()\nconst title = await page.title()\nexpect(url).to.contain(\"dev\")\nexpect(title).to.contains(\"Community\")",
              "err": {},
              "uuid": "ce177583-e6c4-4523-9f5c-bffe39487c09",
              "parentUUID": "40e7d6ec-f181-4f3b-9ffe-d636a82e2daa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "browser reload",
              "fullTitle": "My first pupeteer test browser reload",
              "timedOut": false,
              "duration": 2080,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await page.reload()\n//await page.waitForSelector('#page-content')\nawait shouldExist(page, '#page-content')\nconst url = await page.url()\nconst title = await page.title()\n\nexpect(url).to.contain(\"dev\")\nexpect(title).to.contains(\"Community\")",
              "err": {},
              "uuid": "3fd83f5f-f0f6-4369-82aa-1c004b60bf44",
              "parentUUID": "40e7d6ec-f181-4f3b-9ffe-d636a82e2daa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "click method",
              "fullTitle": "My first pupeteer test click method",
              "timedOut": false,
              "duration": 6337,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loadUrl(page, config.baseUrl)\n//await page.waitForSelector('#write-link')\n//await page.click('#write-link')\nawait click(page, \"#write-link\")\n//await page.waitForSelector('.registration-rainbow')\nawait shouldExist(page, '.registration-rainbow')",
              "err": {},
              "uuid": "4b1091c0-94ad-4cdf-b859-a0780256710b",
              "parentUUID": "40e7d6ec-f181-4f3b-9ffe-d636a82e2daa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "submit searchbox",
              "fullTitle": "My first pupeteer test submit searchbox",
              "timedOut": false,
              "duration": 2044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loadUrl(page, config.baseUrl)\n    await type(page, \"javascript\", \"#nav-search\")\n    //await page.waitForSelector('#nav-search')\n    //await page.type(\"#nav-search\", \"javascript\")\n    //await page.keyboard.press(\"Enter\")\n    await pressKey(page, 'Enter')\n    //await page.waitForSelector('#articles-list')\n    await shouldExist(page, '#articles-list')",
              "err": {},
              "uuid": "02d2d724-a376-4512-963e-0cd8d62699ae",
              "parentUUID": "40e7d6ec-f181-4f3b-9ffe-d636a82e2daa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce177583-e6c4-4523-9f5c-bffe39487c09",
            "3fd83f5f-f0f6-4369-82aa-1c004b60bf44",
            "4b1091c0-94ad-4cdf-b859-a0780256710b",
            "02d2d724-a376-4512-963e-0cd8d62699ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14241,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}